# Generated by Django 5.2.4 on 2025-08-01 17:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Shelter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Official shelter/organization name', max_length=200)),
                ('shelter_type', models.CharField(choices=[('animal_shelter', 'Animal Shelter'), ('rescue_organization', 'Rescue Organization'), ('sanctuary', 'Animal Sanctuary'), ('foster_network', 'Foster Network'), ('veterinary_clinic', 'Veterinary Clinic'), ('other', 'Other')], help_text='Type of organization', max_length=30)),
                ('registration_number', models.CharField(blank=True, help_text='Official registration/license number', max_length=100)),
                ('address', models.TextField(help_text='Complete address of the shelter')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='USA', max_length=100)),
                ('phone_primary', models.CharField(help_text='Primary contact number', max_length=20)),
                ('phone_secondary', models.CharField(blank=True, help_text='Secondary contact number', max_length=20)),
                ('email_primary', models.EmailField(help_text='Primary contact email', max_length=254)),
                ('email_secondary', models.EmailField(blank=True, help_text='Secondary contact email', max_length=254)),
                ('website', models.URLField(blank=True, help_text='Shelter website URL')),
                ('facebook_url', models.URLField(blank=True)),
                ('instagram_url', models.URLField(blank=True)),
                ('twitter_url', models.URLField(blank=True)),
                ('description', models.TextField(help_text='Description of the shelter and its mission')),
                ('mission_statement', models.TextField(blank=True, help_text="Organization's mission statement")),
                ('services_offered', models.TextField(help_text='Services offered (adoption, spay/neuter, etc.)')),
                ('operating_hours', models.JSONField(blank=True, default=dict, help_text='Operating hours for each day of the week')),
                ('total_capacity', models.PositiveIntegerField(blank=True, help_text='Total capacity for animals', null=True)),
                ('current_animal_count', models.PositiveIntegerField(default=0, help_text='Current number of animals')),
                ('total_adoptions', models.PositiveIntegerField(default=0, help_text='Total successful adoptions')),
                ('verification_status', models.CharField(choices=[('pending', 'Pending Verification'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('suspended', 'Suspended')], default='pending', help_text='Verification status', max_length=20)),
                ('verified_at', models.DateTimeField(blank=True, help_text='When the shelter was verified', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is this shelter currently active?')),
                ('accepts_donations', models.BooleanField(default=True, help_text='Does this shelter accept donations?')),
                ('allows_volunteers', models.BooleanField(default=True, help_text='Does this shelter accept volunteers?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User account associated with this shelter', on_delete=django.db.models.deletion.CASCADE, related_name='shelter_profile', to=settings.AUTH_USER_MODEL)),
                ('verified_by', models.ForeignKey(blank=True, help_text='Admin who verified this shelter', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_shelters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shelter',
                'verbose_name_plural': 'Shelters',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ShelterImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Shelter photo', upload_to='shelters/%Y/%m/')),
                ('caption', models.CharField(blank=True, help_text='Caption describing the image', max_length=200)),
                ('image_type', models.CharField(choices=[('exterior', 'Exterior View'), ('interior', 'Interior View'), ('facility', 'Facility'), ('animals', 'Animals at Shelter'), ('staff', 'Staff/Volunteers'), ('events', 'Events'), ('other', 'Other')], default='facility', max_length=20)),
                ('is_primary', models.BooleanField(default=False, help_text='Is this the main shelter image?')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shelters.shelter')),
            ],
            options={
                'verbose_name': 'Shelter Image',
                'verbose_name_plural': 'Shelter Images',
                'ordering': ['-is_primary', '-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ShelterReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], help_text='Rating from 1 to 5 stars')),
                ('title', models.CharField(help_text='Review title', max_length=200)),
                ('comment', models.TextField(help_text='Detailed review comment')),
                ('experience_type', models.CharField(choices=[('adoption', 'Adoption Experience'), ('volunteer', 'Volunteer Experience'), ('donation', 'Donation Experience'), ('visit', 'Facility Visit'), ('other', 'Other')], default='adoption', max_length=20)),
                ('is_verified_adopter', models.BooleanField(default=False, help_text='Is this reviewer a verified adopter?')),
                ('is_approved', models.BooleanField(default=True, help_text='Is this review approved for display?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shelter_reviews', to=settings.AUTH_USER_MODEL)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='shelters.shelter')),
            ],
            options={
                'verbose_name': 'Shelter Review',
                'verbose_name_plural': 'Shelter Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShelterVolunteer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('applied', 'Applied'), ('approved', 'Approved'), ('active', 'Active Volunteer'), ('inactive', 'Inactive'), ('rejected', 'Rejected')], default='applied', max_length=20)),
                ('skills', models.TextField(blank=True, help_text="Volunteer's skills and experience")),
                ('availability', models.TextField(blank=True, help_text="Volunteer's availability schedule")),
                ('emergency_contact', models.CharField(blank=True, help_text='Emergency contact information', max_length=200)),
                ('background_check_completed', models.BooleanField(default=False, help_text='Has background check been completed?')),
                ('orientation_completed', models.BooleanField(default=False, help_text='Has volunteer orientation been completed?')),
                ('start_date', models.DateField(blank=True, help_text='Date volunteer started', null=True)),
                ('total_hours', models.PositiveIntegerField(default=0, help_text='Total volunteer hours logged')),
                ('notes', models.TextField(blank=True, help_text='Notes about the volunteer')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shelter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteers', to='shelters.shelter')),
                ('volunteer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volunteer_applications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shelter Volunteer',
                'verbose_name_plural': 'Shelter Volunteers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='shelter',
            index=models.Index(fields=['city', 'state'], name='shelters_sh_city_6c1638_idx'),
        ),
        migrations.AddIndex(
            model_name='shelter',
            index=models.Index(fields=['verification_status'], name='shelters_sh_verific_8145b8_idx'),
        ),
        migrations.AddIndex(
            model_name='shelter',
            index=models.Index(fields=['shelter_type'], name='shelters_sh_shelter_56dd3d_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shelterreview',
            unique_together={('shelter', 'reviewer')},
        ),
        migrations.AlterUniqueTogether(
            name='sheltervolunteer',
            unique_together={('shelter', 'volunteer')},
        ),
    ]
